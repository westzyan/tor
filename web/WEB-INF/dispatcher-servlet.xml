<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!-- ①：对com.springmvc包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <!--<context:component-scan base-package="com.tor"/>-->

    <context:component-scan base-package="com.tor.controller"/>




    <mvc:default-servlet-handler/>

    <mvc:annotation-driven/>

    <!--如果webapp下你新建了文件夹，想访问里面的静态资源，那么就要在这配置一下-->
    <mvc:resources location="/WEB-INF/images/" mapping="/images/**"/>
    <mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>
    <mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>

    <!--&lt;!&ndash;两个标准配置  &ndash;&gt;-->
    <!--&lt;!&ndash; 能支持springmvc更高级的一些功能，JSR303校验，快捷的ajax...映射动态请求 &ndash;&gt;-->
    <!--<mvc:annotation-driven/>-->
    <!--&lt;!&ndash; 将springmvc不能处理的请求交给tomcat &ndash;&gt;-->
    <!--<mvc:default-servlet-handler/>-->

    <!-- 配置视图解析器，把控制器的逻辑视频映射为真正的视图 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          id="internalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>



    <!--&lt;!&ndash;引入资源文件&ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:db.properties"/>-->
    <!--&lt;!&ndash;数据源&ndash;&gt;-->
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >-->
        <!--<property name="driverClassName" value="${db.driverClassName}"/>-->
        <!--<property name="url" value="${db.url}"/>-->
        <!--<property name="username" value="${db.username}"/>-->
        <!--<property name="password" value="${db.password}"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;&lt;!&ndash;sprig 事务管理类&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="dataSource" ref="dataSource"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <!--&lt;!&ndash;mybatis 配置&ndash;&gt;-->
    <!--&lt;!&ndash;配置sqlSessionFactory&ndash;&gt;-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="mapperLocations" value="classpath:com/tor/mapper/*Mapper.xml"/>-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
    <!--</bean>-->


    <!--&lt;!&ndash;配置mybatis扫描器&ndash;&gt;-->
    <!--<bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.tor.mapper"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;&lt;!&ndash;声明式事务&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:advice id="transactionInterceptor">&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:attributes>&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:method name="del*"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:method name="upd*"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:method name="ins*"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:method name="*" read-only="true"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</tx:attributes>&ndash;&gt;-->
    <!--&lt;!&ndash;</tx:advice>&ndash;&gt;-->

    <!--&lt;!&ndash;&lt;!&ndash;aop配置&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<aop:config>&ndash;&gt;-->
    <!--&lt;!&ndash;<aop:pointcut id="point" expression="execution(* com.tor.service.impl.*.*(..))"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<aop:advisor advice-ref="transactionInterceptor" pointcut-ref="point"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</aop:config>&ndash;&gt;-->

    <!--&lt;!&ndash; 使用@Transactional进行声明式事务管理需要声明下面这行 &ndash;&gt;-->
    <!--<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />-->
    <!--&lt;!&ndash; 事务管理 &ndash;&gt;-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="rollbackOnCommitFailure" value="true"/>-->
    <!--</bean>-->


</beans>